version: "3.8"

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: laravel-app
        container_name: laravel_app
        restart: unless-stopped
        volumes:
            - ./storage:/var/www/storage
            # Share the public/build directory with nginx
            - app_build:/var/www/public/build
        environment:
            - "DB_HOST=mysql"
            - "DB_PORT=3306"
            - "DB_DATABASE=laravel"
            - "DB_USERNAME=laravel"
            - "DB_PASSWORD=laravel"
        healthcheck:
            test: ["CMD", "php", "-v"]
            interval: 30s
            timeout: 10s
            retries: 3
        depends_on:
            mysql:
                condition: service_healthy
        networks:
            - laravel

    mysql:
        image: mysql:8.0
        container_name: laravel_db
        restart: unless-stopped
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: laravel
            MYSQL_USER: laravel
            MYSQL_PASSWORD: laravel
        volumes:
            - dbdata:/var/lib/mysql
        healthcheck:
            test:
                [
                    "CMD",
                    "mysqladmin",
                    "ping",
                    "-h",
                    "localhost",
                    "-u",
                    "root",
                    "-p$$MYSQL_ROOT_PASSWORD",
                ]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - laravel

    nginx:
        image: nginx:alpine
        container_name: laravel_nginx
        restart: unless-stopped
        ports:
            - "8000:80"
        volumes:
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./storage/app/public:/var/www/public/storage
            # Mount the public directory for basic files
            - ./public:/var/www/public
            # Share the build directory with app
            - app_build:/var/www/public/build
        depends_on:
            app:
                condition: service_healthy
        networks:
            - laravel

    artisan:
        build:
            context: .
            dockerfile: Dockerfile
        depends_on:
            mysql:
                condition: service_healthy
            app:
                condition: service_healthy
        entrypoint: >
            sh -c "php artisan key:generate --force && php artisan migrate --force && php artisan db:seed --force"
        networks:
            - laravel

volumes:
    dbdata:
    app_build: # Add a named volume for build assets

networks:
    laravel:
